version: 2.1

jobs:
  test:
    docker:
      - image: python:3.12-slim-bookworm
    resource_class: small
    steps:
      - checkout
      - run:
          name: Install requirements
          command: pip install -r requirements.txt
      - run:
          name: Run test
          command: pytest ./src/test-webapp.py
  build:
    docker:
      - image: cimg/base:2024.01
    resource_class: medium
    environment:
      TAG: 0.0.<< pipeline.number >>
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Build and push Docker image
          command: |
            echo $DOCKER_REGISTRY_PASS | docker login -u $DOCKER_REGISTRY_USER --password-stdin
            docker buildx create --use
            docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t $DOCKER_REGISTRY_USER/$CIRCLE_PROJECT_REPONAME:$TAG --push .
            docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t $DOCKER_REGISTRY_USER/$CIRCLE_PROJECT_REPONAME --push .
  deploy:
    docker:
      - image: cimg/base:2024.01
    resource_class: small
    steps:
      - checkout
      - run:
          name: Deploy Over SSH
          command: |
            ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
            docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASS &&
            docker container stop $CIRCLE_PROJECT_REPONAME || true &&
            docker container rm $CIRCLE_PROJECT_REPONAME || true &&
            docker pull $DOCKER_REGISTRY_USER/$CIRCLE_PROJECT_REPONAME &&
            docker run --name $CIRCLE_PROJECT_REPONAME -p 8181:8080 -d $DOCKER_REGISTRY_USER/$CIRCLE_PROJECT_REPONAME"

workflows:
  test_build_deploy:
    jobs:
      - test
      - build:
          requires:
            - test
      - deploy:
          requires:
            - build